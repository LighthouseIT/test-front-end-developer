"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _preact = require("preact");

var _MaterialComponent = _interopRequireDefault(require("../MaterialComponent"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

class ImageList extends _MaterialComponent.default {
  constructor() {
    super();
    this.componentName = 'image-list';
    this._mdcProps = ['masonry', 'with-text-protection'];
  }

  materialDom(props) {
    return (0, _preact.h)("ul", _extends({}, props, {
      ref: this.setControlRef
    }), props.children);
  }

}

class ImageListAspectContainer extends _MaterialComponent.default {
  constructor() {
    super();
    this.componentName = 'image-list__image-aspect-container';
  }

}

class ImageListItem extends _MaterialComponent.default {
  constructor() {
    super();
    this.componentName = 'image-list__item';
  }

  materialDom(props) {
    return (0, _preact.h)("li", _extends({}, props, {
      ref: this.setControlRef
    }), props.children);
  }

}

class ImageListImage extends _MaterialComponent.default {
  constructor() {
    super();
    this.componentName = 'image-list__image';
  }

  materialDom(props) {
    return (0, _preact.h)("img", _extends({}, props, {
      ref: this.setControlRef
    }), props.children);
  }

}

class ImageListSupporting extends _MaterialComponent.default {
  constructor() {
    super();
    this.componentName = 'image-list__supporting';
  }

}

class ImageListLabel extends _MaterialComponent.default {
  constructor() {
    super();
    this.componentName = 'image-list__label';
  }

  materialDom(props) {
    return (0, _preact.h)("span", _extends({}, props, {
      ref: this.setControlRef
    }), props.children);
  }

}

ImageList.Item = ImageListItem;
ImageList.AspectContainer = ImageListAspectContainer;
ImageList.Image = ImageListImage;
ImageList.Supporting = ImageListSupporting;
ImageList.Label = ImageListLabel;
var _default = ImageList;
exports.default = _default;