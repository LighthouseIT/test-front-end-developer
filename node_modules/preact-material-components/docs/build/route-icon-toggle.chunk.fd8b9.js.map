{"version":3,"sources":["webpack:///route-icon-toggle.chunk.fd8b9.js","webpack:////Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/foundation.js","webpack:////Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/constants.js","webpack:////Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/adapter.js","webpack:////Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/index.js","webpack:///./routes/icon-toggle/sample.txt","webpack:////Users/prateekbh/projects/preact-material-components/IconToggle/index.js","webpack:///./routes/icon-toggle/index.js"],"names":["webpackJsonp","ajYu","module","__webpack_exports__","__webpack_require__","foundation__classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","isSpace","keyboardKey","key","keyCode","icon_toggle__classCallCheck","icon_toggle__possibleConstructorReturn","icon_toggle__inherits","defineProperty","component","base_foundation","cssClasses","MDCIconToggleAdapter","addClass","removeClass","registerInteractionHandler","deregisterInteractionHandler","setText","getTabIndex","setTabIndex","getAttr","setAttr","rmAttr","notifyChange","ROOT","DISABLED","strings","DATA_TOGGLE_ON","DATA_TOGGLE_OFF","ARIA_PRESSED","ARIA_DISABLED","ARIA_LABEL","CHANGE_EVENT","_extends","assign","target","i","arguments","length","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","foundation_MDCIconToggleFoundation","_MDCFoundation","MDCIconToggleFoundation","adapter","this","_this","defaultAdapter","on_","disabled_","savedTabIndex_","toggleOnData_","toggleOffData_","clickHandler_","toggleFromEvt_","isHandlingKeydown_","keydownHandler_","evt","preventDefault","keyupHandler_","get","init","refreshToggleData","adapter_","_MDCIconToggleFoundat","parseJsonDataAttr_","destroy","toggle","isOn","undefined","_MDCIconToggleFoundat2","_ref","classToRemove","cssClass","_ref2","content","label","dataAttr","val","JSON","parse","isDisabled","setDisabled","isKeyboardActivated","icon_toggle_foundation","ripple","d","icon_toggle_MDCIconToggle","icon_toggle__extends","icon_toggle__createClass","_MDCComponent","MDCIconToggle","_len","args","Array","_key","apply","concat","ripple_","initRipple_","attachTo","root","_this2","createAdapter","isUnbounded","isSurfaceActive","foundation_","foundation","root_","getDefaultFoundation","_this3","className","iconEl_","classList","add","remove","type","handler","addEventListener","removeEventListener","text","textContent","tabIndex","name","getAttribute","setAttribute","removeAttribute","evtData","emit","initialSyncWithDOM","on","disabled","sel","dataset","querySelector","set","oqLc","exports","sYzM","_preact","_iconToggle","_MaterialComponent2","_MaterialComponent3","obj","__esModule","default","_MaterialComponent","IconToggle","getPrototypeOf","componentName","_onChange","bind","e","onChange","MDComponent","control","listen","unlisten","stringify","h","ref","setControlRef","children","zxDR","IconTogglePage","__WEBPACK_IMPORTED_MODULE_0_preact__","__WEBPACK_IMPORTED_MODULE_1__IconToggle__","n","__WEBPACK_IMPORTED_MODULE_1__IconToggle___default","__WEBPACK_IMPORTED_MODULE_2__components_component_table__","__WEBPACK_IMPORTED_MODULE_3__components_code_block__","__WEBPACK_IMPORTED_MODULE_4__sample_txt__","__WEBPACK_IMPORTED_MODULE_4__sample_txt___default","class","a","_ref3","_ref4","href","_ref5","_Component","propsTable","description","render","toggleOnIcon","toggleOffIcon","data","role","tabindex","aria-pressed","aria-label","data-toggle-on","data-toggle-off"],"mappings":"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","file":"route-icon-toggle.chunk.fd8b9.js","sourcesContent":["webpackJsonp([14],{\n\n/***/ \"ajYu\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: /Users/prateekbh/projects/preact-material-components/node_modules/@material/base/component.js\nvar component = __webpack_require__(\"IKot\");\n\n// EXTERNAL MODULE: /Users/prateekbh/projects/preact-material-components/node_modules/@material/base/foundation.js\nvar base_foundation = __webpack_require__(\"y4cK\");\n\n// CONCATENATED MODULE: /Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/adapter.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Icon Toggle. Provides an interface for managing\n * - classes\n * - dom\n * - inner text\n * - event handlers\n * - event dispatch\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nvar MDCIconToggleAdapter = function () {\n  function MDCIconToggleAdapter() {\n    _classCallCheck(this, MDCIconToggleAdapter);\n  }\n\n  /** @param {string} className */\n  MDCIconToggleAdapter.prototype.addClass = function addClass(className) {};\n\n  /** @param {string} className */\n\n\n  MDCIconToggleAdapter.prototype.removeClass = function removeClass(className) {};\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n\n\n  MDCIconToggleAdapter.prototype.registerInteractionHandler = function registerInteractionHandler(type, handler) {};\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n\n\n  MDCIconToggleAdapter.prototype.deregisterInteractionHandler = function deregisterInteractionHandler(type, handler) {};\n\n  /** @param {string} text */\n\n\n  MDCIconToggleAdapter.prototype.setText = function setText(text) {};\n\n  /** @return {number} */\n\n\n  MDCIconToggleAdapter.prototype.getTabIndex = function getTabIndex() {};\n\n  /** @param {number} tabIndex */\n\n\n  MDCIconToggleAdapter.prototype.setTabIndex = function setTabIndex(tabIndex) {};\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n\n\n  MDCIconToggleAdapter.prototype.getAttr = function getAttr(name) {};\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   */\n\n\n  MDCIconToggleAdapter.prototype.setAttr = function setAttr(name, value) {};\n\n  /** @param {string} name */\n\n\n  MDCIconToggleAdapter.prototype.rmAttr = function rmAttr(name) {};\n\n  /** @param {!IconToggleEvent} evtData */\n\n\n  MDCIconToggleAdapter.prototype.notifyChange = function notifyChange(evtData) {};\n\n  return MDCIconToggleAdapter;\n}();\n\n/**\n * @typedef {!{\n *   isOn: boolean,\n * }}\n */\n\n\nvar IconToggleEvent = void 0;\n\n\n// CONCATENATED MODULE: /Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/constants.js\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nvar cssClasses = {\n  ROOT: 'mdc-icon-toggle',\n  DISABLED: 'mdc-icon-toggle--disabled'\n};\n\n/** @enum {string} */\nvar strings = {\n  DATA_TOGGLE_ON: 'data-toggle-on',\n  DATA_TOGGLE_OFF: 'data-toggle-off',\n  ARIA_PRESSED: 'aria-pressed',\n  ARIA_DISABLED: 'aria-disabled',\n  ARIA_LABEL: 'aria-label',\n  CHANGE_EVENT: 'MDCIconToggle:change'\n};\n\n\n// CONCATENATED MODULE: /Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/foundation.js\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction foundation__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* eslint-disable no-unused-vars */\n\n\n\n/**\n * @extends {MDCFoundation<!MDCIconToggleAdapter>}\n */\n\nvar foundation_MDCIconToggleFoundation = function (_MDCFoundation) {\n  _inherits(MDCIconToggleFoundation, _MDCFoundation);\n\n  _createClass(MDCIconToggleFoundation, null, [{\n    key: 'cssClasses',\n    get: function get() {\n      return cssClasses;\n    }\n  }, {\n    key: 'strings',\n    get: function get() {\n      return strings;\n    }\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return {\n        addClass: function addClass() /* className: string */{},\n        removeClass: function removeClass() /* className: string */{},\n        registerInteractionHandler: function registerInteractionHandler() /* type: string, handler: EventListener */{},\n        deregisterInteractionHandler: function deregisterInteractionHandler() /* type: string, handler: EventListener */{},\n        setText: function setText() /* text: string */{},\n        getTabIndex: function getTabIndex() {\n          return (/* number */0\n          );\n        },\n        setTabIndex: function setTabIndex() /* tabIndex: number */{},\n        getAttr: function getAttr() {\n          return (/* name: string */ /* string */''\n          );\n        },\n        setAttr: function setAttr() /* name: string, value: string */{},\n        rmAttr: function rmAttr() /* name: string */{},\n        notifyChange: function notifyChange() /* evtData: IconToggleEvent */{}\n      };\n    }\n  }]);\n\n  function MDCIconToggleFoundation(adapter) {\n    foundation__classCallCheck(this, MDCIconToggleFoundation);\n\n    /** @private {boolean} */\n    var _this = _possibleConstructorReturn(this, _MDCFoundation.call(this, _extends(MDCIconToggleFoundation.defaultAdapter, adapter)));\n\n    _this.on_ = false;\n\n    /** @private {boolean} */\n    _this.disabled_ = false;\n\n    /** @private {number} */\n    _this.savedTabIndex_ = -1;\n\n    /** @private {?IconToggleState} */\n    _this.toggleOnData_ = null;\n\n    /** @private {?IconToggleState} */\n    _this.toggleOffData_ = null;\n\n    _this.clickHandler_ = /** @private {!EventListener} */function () {\n      return _this.toggleFromEvt_();\n    };\n\n    /** @private {boolean} */\n    _this.isHandlingKeydown_ = false;\n\n    _this.keydownHandler_ = /** @private {!EventListener} */function ( /** @type {!KeyboardKey} */evt) {\n      if (isSpace(evt)) {\n        _this.isHandlingKeydown_ = true;\n        return evt.preventDefault();\n      }\n    };\n\n    _this.keyupHandler_ = /** @private {!EventListener} */function ( /** @type {!KeyboardKey} */evt) {\n      if (isSpace(evt)) {\n        _this.isHandlingKeydown_ = false;\n        _this.toggleFromEvt_();\n      }\n    };\n    return _this;\n  }\n\n  MDCIconToggleFoundation.prototype.init = function init() {\n    this.refreshToggleData();\n    this.savedTabIndex_ = this.adapter_.getTabIndex();\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n  };\n\n  MDCIconToggleFoundation.prototype.refreshToggleData = function refreshToggleData() {\n    var _MDCIconToggleFoundat = MDCIconToggleFoundation.strings,\n        DATA_TOGGLE_ON = _MDCIconToggleFoundat.DATA_TOGGLE_ON,\n        DATA_TOGGLE_OFF = _MDCIconToggleFoundat.DATA_TOGGLE_OFF;\n\n    this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);\n    this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);\n  };\n\n  MDCIconToggleFoundation.prototype.destroy = function destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n  };\n\n  /** @private */\n\n\n  MDCIconToggleFoundation.prototype.toggleFromEvt_ = function toggleFromEvt_() {\n    this.toggle();\n    var isOn = this.on_;\n\n    this.adapter_.notifyChange( /** @type {!IconToggleEvent} */{ isOn: isOn });\n  };\n\n  /** @return {boolean} */\n\n\n  MDCIconToggleFoundation.prototype.isOn = function isOn() {\n    return this.on_;\n  };\n\n  /** @param {boolean=} isOn */\n\n\n  MDCIconToggleFoundation.prototype.toggle = function toggle() {\n    var isOn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !this.on_;\n\n    this.on_ = isOn;\n\n    var _MDCIconToggleFoundat2 = MDCIconToggleFoundation.strings,\n        ARIA_LABEL = _MDCIconToggleFoundat2.ARIA_LABEL,\n        ARIA_PRESSED = _MDCIconToggleFoundat2.ARIA_PRESSED;\n\n\n    if (this.on_) {\n      this.adapter_.setAttr(ARIA_PRESSED, 'true');\n    } else {\n      this.adapter_.setAttr(ARIA_PRESSED, 'false');\n    }\n\n    var _ref = this.on_ ? this.toggleOffData_ : this.toggleOnData_,\n        classToRemove = _ref.cssClass;\n\n    if (classToRemove) {\n      this.adapter_.removeClass(classToRemove);\n    }\n\n    var _ref2 = this.on_ ? this.toggleOnData_ : this.toggleOffData_,\n        content = _ref2.content,\n        label = _ref2.label,\n        cssClass = _ref2.cssClass;\n\n    if (cssClass) {\n      this.adapter_.addClass(cssClass);\n    }\n    if (content) {\n      this.adapter_.setText(content);\n    }\n    if (label) {\n      this.adapter_.setAttr(ARIA_LABEL, label);\n    }\n  };\n\n  /**\n   * @param {string} dataAttr\n   * @return {!IconToggleState}\n   */\n\n\n  MDCIconToggleFoundation.prototype.parseJsonDataAttr_ = function parseJsonDataAttr_(dataAttr) {\n    var val = this.adapter_.getAttr(dataAttr);\n    if (!val) {\n      return {};\n    }\n    return (/** @type {!IconToggleState} */JSON.parse(val)\n    );\n  };\n\n  /** @return {boolean} */\n\n\n  MDCIconToggleFoundation.prototype.isDisabled = function isDisabled() {\n    return this.disabled_;\n  };\n\n  /** @param {boolean} isDisabled */\n\n\n  MDCIconToggleFoundation.prototype.setDisabled = function setDisabled(isDisabled) {\n    this.disabled_ = isDisabled;\n\n    var DISABLED = MDCIconToggleFoundation.cssClasses.DISABLED;\n    var ARIA_DISABLED = MDCIconToggleFoundation.strings.ARIA_DISABLED;\n\n\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setTabIndex(-1);\n      this.adapter_.setAttr(ARIA_DISABLED, 'true');\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.setTabIndex(this.savedTabIndex_);\n      this.adapter_.rmAttr(ARIA_DISABLED);\n      this.adapter_.removeClass(DISABLED);\n    }\n  };\n\n  /** @return {boolean} */\n\n\n  MDCIconToggleFoundation.prototype.isKeyboardActivated = function isKeyboardActivated() {\n    return this.isHandlingKeydown_;\n  };\n\n  return MDCIconToggleFoundation;\n}(base_foundation[\"a\" /* default */]);\n\n/**\n * @typedef {!{\n *   key: string,\n *   keyCode: number\n * }}\n */\n\n\nvar KeyboardKey = void 0;\n\n/**\n * @param {!KeyboardKey} keyboardKey\n * @return {boolean}\n */\nfunction isSpace(keyboardKey) {\n  return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;\n}\n\n/** @record */\n\nvar IconToggleState = function IconToggleState() {\n  foundation__classCallCheck(this, IconToggleState);\n};\n\n/**\n * The aria-label value of the icon toggle, or undefined if there is no aria-label.\n * @export {string|undefined}\n */\n\n\nIconToggleState.prototype.label;\n\n/**\n * The text for the icon toggle, or undefined if there is no text.\n * @export {string|undefined}\n */\nIconToggleState.prototype.content;\n\n/**\n * The CSS class to add to the icon toggle, or undefined if there is no CSS class.\n * @export {string|undefined}\n */\nIconToggleState.prototype.cssClass;\n\n/* harmony default export */ var icon_toggle_foundation = (foundation_MDCIconToggleFoundation);\n// EXTERNAL MODULE: /Users/prateekbh/projects/preact-material-components/node_modules/@material/ripple/index.js + 3 modules\nvar ripple = __webpack_require__(\"gf/K\");\n\n// CONCATENATED MODULE: /Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/index.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCIconToggle\", function() { return icon_toggle_MDCIconToggle; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"MDCIconToggleFoundation\", function() { return icon_toggle_foundation; });\nvar icon_toggle__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar icon_toggle__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction icon_toggle__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction icon_toggle__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction icon_toggle__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * @extends {MDCComponent<!MDCIconToggleFoundation>}\n */\n\nvar icon_toggle_MDCIconToggle = function (_MDCComponent) {\n  icon_toggle__inherits(MDCIconToggle, _MDCComponent);\n\n  MDCIconToggle.attachTo = function attachTo(root) {\n    return new MDCIconToggle(root);\n  };\n\n  function MDCIconToggle() {\n    icon_toggle__classCallCheck(this, MDCIconToggle);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    /** @private {!MDCRipple} */\n    var _this = icon_toggle__possibleConstructorReturn(this, _MDCComponent.call.apply(_MDCComponent, [this].concat(args)));\n\n    _this.ripple_ = _this.initRipple_();\n    return _this;\n  }\n\n  /** @return {!Element} */\n\n\n  /**\n   * @return {!MDCRipple}\n   * @private\n   */\n  MDCIconToggle.prototype.initRipple_ = function initRipple_() {\n    var _this2 = this;\n\n    var adapter = icon_toggle__extends(ripple[\"a\" /* MDCRipple */].createAdapter(this), {\n      isUnbounded: function isUnbounded() {\n        return true;\n      },\n      isSurfaceActive: function isSurfaceActive() {\n        return _this2.foundation_.isKeyboardActivated();\n      }\n    });\n    var foundation = new ripple[\"b\" /* MDCRippleFoundation */](adapter);\n    return new ripple[\"a\" /* MDCRipple */](this.root_, foundation);\n  };\n\n  MDCIconToggle.prototype.destroy = function destroy() {\n    this.ripple_.destroy();\n    _MDCComponent.prototype.destroy.call(this);\n  };\n\n  /** @return {!MDCIconToggleFoundation} */\n\n\n  MDCIconToggle.prototype.getDefaultFoundation = function getDefaultFoundation() {\n    var _this3 = this;\n\n    return new icon_toggle_foundation({\n      addClass: function addClass(className) {\n        return _this3.iconEl_.classList.add(className);\n      },\n      removeClass: function removeClass(className) {\n        return _this3.iconEl_.classList.remove(className);\n      },\n      registerInteractionHandler: function registerInteractionHandler(type, handler) {\n        return _this3.root_.addEventListener(type, handler);\n      },\n      deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {\n        return _this3.root_.removeEventListener(type, handler);\n      },\n      setText: function setText(text) {\n        return _this3.iconEl_.textContent = text;\n      },\n      getTabIndex: function getTabIndex() {\n        return (/* number */_this3.root_.tabIndex\n        );\n      },\n      setTabIndex: function setTabIndex(tabIndex) {\n        return _this3.root_.tabIndex = tabIndex;\n      },\n      getAttr: function getAttr(name, value) {\n        return _this3.root_.getAttribute(name, value);\n      },\n      setAttr: function setAttr(name, value) {\n        return _this3.root_.setAttribute(name, value);\n      },\n      rmAttr: function rmAttr(name) {\n        return _this3.root_.removeAttribute(name);\n      },\n      notifyChange: function notifyChange(evtData) {\n        return _this3.emit(icon_toggle_foundation.strings.CHANGE_EVENT, evtData);\n      }\n    });\n  };\n\n  MDCIconToggle.prototype.initialSyncWithDOM = function initialSyncWithDOM() {\n    this.on = this.root_.getAttribute(icon_toggle_foundation.strings.ARIA_PRESSED) === 'true';\n    this.disabled = this.root_.getAttribute(icon_toggle_foundation.strings.ARIA_DISABLED) === 'true';\n  };\n\n  /** @return {!MDCRipple} */\n\n\n  MDCIconToggle.prototype.refreshToggleData = function refreshToggleData() {\n    this.foundation_.refreshToggleData();\n  };\n\n  icon_toggle__createClass(MDCIconToggle, [{\n    key: 'iconEl_',\n    get: function get() {\n      var sel = this.root_.dataset['iconInnerSelector'];\n\n      return sel ?\n      /** @type {!Element} */this.root_.querySelector(sel) : this.root_;\n    }\n  }, {\n    key: 'ripple',\n    get: function get() {\n      return this.ripple_;\n    }\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'on',\n    get: function get() {\n      return this.foundation_.isOn();\n    }\n\n    /** @param {boolean} isOn */\n    ,\n    set: function set(isOn) {\n      this.foundation_.toggle(isOn);\n    }\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'disabled',\n    get: function get() {\n      return this.foundation_.isDisabled();\n    }\n\n    /** @param {boolean} isDisabled */\n    ,\n    set: function set(isDisabled) {\n      this.foundation_.setDisabled(isDisabled);\n    }\n  }]);\n\n  return MDCIconToggle;\n}(component[\"a\" /* default */]);\n\n\n\n/***/ }),\n\n/***/ \"oqLc\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"import {h, Component} from 'preact';\\nimport IconToggle from 'preact-material-components/IconToggle';\\nimport 'preact-material-components/IconToggle/style.css';\\n\\nexport default class IconTogglePage extends Component {\\n  render(){\\n    const toggleOnIcon = {\\n      content: \\\"favorite\\\",\\n      label: \\\"Remove From Favorites\\\"\\n    };\\n    const toggleOffIcon = {\\n      content: \\\"favorite_border\\\",\\n      label: \\\"Add to Favorites\\\"\\n    };\\n    return (\\n      <div>\\n        <IconToggle\\n          role=\\\"button\\\"\\n          tabindex=\\\"0\\\"\\n          aria-pressed=\\\"false\\\"\\n          aria-label=\\\"Add to favorites\\\"\\n          data-toggle-on={toggleOnIcon}\\n          data-toggle-off={toggleOffIcon}\\n        >\\n          favorite_border\\n        </IconToggle>\\n      </div>\\n    );\\n  }\\n}\\n\"\n\n/***/ }),\n\n/***/ \"sYzM\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nvar _preact = __webpack_require__(\"KM04\");\n\nvar _iconToggle = __webpack_require__(\"ajYu\");\n\nvar _MaterialComponent2 = __webpack_require__(\"Q+QW\");\n\nvar _MaterialComponent3 = _interopRequireDefault(_MaterialComponent2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/**\n * @prop disabled = false\n */\nvar IconToggle = function (_MaterialComponent) {\n  _inherits(IconToggle, _MaterialComponent);\n\n  function IconToggle() {\n    _classCallCheck(this, IconToggle);\n\n    var _this = _possibleConstructorReturn(this, (IconToggle.__proto__ || Object.getPrototypeOf(IconToggle)).call(this));\n\n    _this.componentName = 'icon-toggle';\n    _this._onChange = _this._onChange.bind(_this);\n    return _this;\n  }\n\n  _createClass(IconToggle, [{\n    key: '_onChange',\n    value: function _onChange(e) {\n      if (this.props.onChange) {\n        this.props.onChange(e);\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.MDComponent = new _iconToggle.MDCIconToggle(this.control);\n      this.MDComponent.listen('MDCIconToggle:change', this._onChange);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.MDComponent.unlisten('MDCIconToggle:change', this._onChange);\n      this.MDComponent.destroy && this.MDComponent.destroy();\n    }\n  }, {\n    key: 'materialDom',\n    value: function materialDom(props) {\n      if (props['data-toggle-on']) props['data-toggle-on'] = JSON.stringify(props['data-toggle-on']);\n      if (props['data-toggle-off']) props['data-toggle-off'] = JSON.stringify(props['data-toggle-off']);\n      return (0, _preact.h)('i', _extends({}, props, { className: 'material-icons', ref: this.setControlRef }), props.children);\n    }\n  }]);\n\n  return IconToggle;\n}(_MaterialComponent3.default);\n\nexports.default = IconToggle;\n\n/***/ }),\n\n/***/ \"zxDR\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IconTogglePage; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_preact__ = __webpack_require__(\"KM04\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_preact___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_preact__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__IconToggle__ = __webpack_require__(\"sYzM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__IconToggle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__IconToggle__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_component_table__ = __webpack_require__(\"B/9r\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_code_block__ = __webpack_require__(\"F4jb\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sample_txt__ = __webpack_require__(\"oqLc\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sample_txt___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__sample_txt__);\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Dependencies\n\n\n// Material Components\n\n\n// Components\n\n\n\n// Samples\n\n\n// Class\n\nvar _ref = Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n  'div',\n  { className: 'mdc-typography--display1' },\n  'Sample code '\n);\n\nvar _ref2 = Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n  __WEBPACK_IMPORTED_MODULE_3__components_code_block__[\"a\" /* default */],\n  null,\n  Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n    'code',\n    { 'class': 'lang-js' },\n    __WEBPACK_IMPORTED_MODULE_4__sample_txt___default.a\n  )\n);\n\nvar _ref3 = Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n  'div',\n  { className: 'mdc-typography--display1' },\n  'Original documentation'\n);\n\nvar _ref4 = Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n  'div',\n  { className: 'mdc-typography--body' },\n  'This component encapsulates',\n  ' ',\n  Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n    'span',\n    { className: 'strong' },\n    'mdc-icon-toggle'\n  ),\n  ', you can refer to its documentation',\n  Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n    'a',\n    { href: 'https://github.com/material-components/material-components-web/tree/master/packages/mdc-icon-toggle' },\n    ' ',\n    'here'\n  ),\n  '.'\n);\n\nvar _ref5 = Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n  'div',\n  { className: 'mdc-typography--display1' },\n  'Demo '\n);\n\nvar IconTogglePage = function (_Component) {\n  _inherits(IconTogglePage, _Component);\n\n  function IconTogglePage() {\n    _classCallCheck(this, IconTogglePage);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this));\n\n    _this.propsTable = [{\n      component: 'IconToggle',\n      props: [{\n        name: 'disabled',\n        description: 'Is the icon disabled'\n      }, {\n        name: 'data-toggle-on',\n        description: 'JSON object for toggle on icon'\n      }, {\n        name: 'data-toggle-off',\n        description: 'JSON object for toggle off icon'\n      }]\n    }];\n    return _this;\n  }\n\n  IconTogglePage.prototype.render = function render() {\n    var toggleOnIcon = {\n      content: 'favorite',\n      label: 'Remove From Favorites'\n    };\n    var toggleOffIcon = {\n      content: 'favorite_border',\n      label: 'Add to Favorites'\n    };\n    return Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n      'div',\n      null,\n      Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(__WEBPACK_IMPORTED_MODULE_2__components_component_table__[\"a\" /* default */], { data: this.propsTable }),\n      _ref,\n      _ref2,\n      _ref3,\n      _ref4,\n      _ref5,\n      Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n        __WEBPACK_IMPORTED_MODULE_1__IconToggle___default.a,\n        {\n          role: 'button',\n          tabindex: '0',\n          'aria-pressed': 'false',\n          'aria-label': 'Add to favorites',\n          'data-toggle-on': toggleOnIcon,\n          'data-toggle-off': toggleOffIcon },\n        'favorite_border'\n      )\n    );\n  };\n\n  return IconTogglePage;\n}(__WEBPACK_IMPORTED_MODULE_0_preact__[\"Component\"]);\n\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// route-icon-toggle.chunk.fd8b9.js","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCIconToggleAdapter, IconToggleEvent} from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCIconToggleAdapter>}\n */\nclass MDCIconToggleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      setText: (/* text: string */) => {},\n      getTabIndex: () => /* number */ 0,\n      setTabIndex: (/* tabIndex: number */) => {},\n      getAttr: (/* name: string */) => /* string */ '',\n      setAttr: (/* name: string, value: string */) => {},\n      rmAttr: (/* name: string */) => {},\n      notifyChange: (/* evtData: IconToggleEvent */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCIconToggleFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.on_ = false;\n\n    /** @private {boolean} */\n    this.disabled_ = false;\n\n    /** @private {number} */\n    this.savedTabIndex_ = -1;\n\n    /** @private {?IconToggleState} */\n    this.toggleOnData_ = null;\n\n    /** @private {?IconToggleState} */\n    this.toggleOffData_ = null;\n\n    this.clickHandler_ = /** @private {!EventListener} */ (\n      () => this.toggleFromEvt_());\n\n    /** @private {boolean} */\n    this.isHandlingKeydown_ = false;\n\n    this.keydownHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = true;\n        return evt.preventDefault();\n      }\n    });\n\n    this.keyupHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = false;\n        this.toggleFromEvt_();\n      }\n    });\n  }\n\n  init() {\n    this.refreshToggleData();\n    this.savedTabIndex_ = this.adapter_.getTabIndex();\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  refreshToggleData() {\n    const {DATA_TOGGLE_ON, DATA_TOGGLE_OFF} = MDCIconToggleFoundation.strings;\n    this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);\n    this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  /** @private */\n  toggleFromEvt_() {\n    this.toggle();\n    const {on_: isOn} = this;\n    this.adapter_.notifyChange(/** @type {!IconToggleEvent} */ ({isOn}));\n  }\n\n  /** @return {boolean} */\n  isOn() {\n    return this.on_;\n  }\n\n  /** @param {boolean=} isOn */\n  toggle(isOn = !this.on_) {\n    this.on_ = isOn;\n\n    const {ARIA_LABEL, ARIA_PRESSED} = MDCIconToggleFoundation.strings;\n\n    if (this.on_) {\n      this.adapter_.setAttr(ARIA_PRESSED, 'true');\n    } else {\n      this.adapter_.setAttr(ARIA_PRESSED, 'false');\n    }\n\n    const {cssClass: classToRemove} =\n        this.on_ ? this.toggleOffData_ : this.toggleOnData_;\n\n    if (classToRemove) {\n      this.adapter_.removeClass(classToRemove);\n    }\n\n    const {content, label, cssClass} = this.on_ ? this.toggleOnData_ : this.toggleOffData_;\n\n    if (cssClass) {\n      this.adapter_.addClass(cssClass);\n    }\n    if (content) {\n      this.adapter_.setText(content);\n    }\n    if (label) {\n      this.adapter_.setAttr(ARIA_LABEL, label);\n    }\n  }\n\n  /**\n   * @param {string} dataAttr\n   * @return {!IconToggleState}\n   */\n  parseJsonDataAttr_(dataAttr) {\n    const val = this.adapter_.getAttr(dataAttr);\n    if (!val) {\n      return {};\n    }\n    return /** @type {!IconToggleState} */ (JSON.parse(val));\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} isDisabled */\n  setDisabled(isDisabled) {\n    this.disabled_ = isDisabled;\n\n    const {DISABLED} = MDCIconToggleFoundation.cssClasses;\n    const {ARIA_DISABLED} = MDCIconToggleFoundation.strings;\n\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setTabIndex(-1);\n      this.adapter_.setAttr(ARIA_DISABLED, 'true');\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.setTabIndex(this.savedTabIndex_);\n      this.adapter_.rmAttr(ARIA_DISABLED);\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {boolean} */\n  isKeyboardActivated() {\n    return this.isHandlingKeydown_;\n  }\n}\n\n/**\n * @typedef {!{\n *   key: string,\n *   keyCode: number\n * }}\n */\nlet KeyboardKey;\n\n/**\n * @param {!KeyboardKey} keyboardKey\n * @return {boolean}\n */\nfunction isSpace(keyboardKey) {\n  return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;\n}\n\n\n/** @record */\nclass IconToggleState {}\n\n/**\n * The aria-label value of the icon toggle, or undefined if there is no aria-label.\n * @export {string|undefined}\n */\nIconToggleState.prototype.label;\n\n/**\n * The text for the icon toggle, or undefined if there is no text.\n * @export {string|undefined}\n */\nIconToggleState.prototype.content;\n\n/**\n * The CSS class to add to the icon toggle, or undefined if there is no CSS class.\n * @export {string|undefined}\n */\nIconToggleState.prototype.cssClass;\n\nexport default MDCIconToggleFoundation;\n\n\n\n// WEBPACK FOOTER //\n// /Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/foundation.js","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-icon-toggle',\n  DISABLED: 'mdc-icon-toggle--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  DATA_TOGGLE_ON: 'data-toggle-on',\n  DATA_TOGGLE_OFF: 'data-toggle-off',\n  ARIA_PRESSED: 'aria-pressed',\n  ARIA_DISABLED: 'aria-disabled',\n  ARIA_LABEL: 'aria-label',\n  CHANGE_EVENT: 'MDCIconToggle:change',\n};\n\nexport {cssClasses, strings};\n\n\n\n// WEBPACK FOOTER //\n// /Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/constants.js","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Icon Toggle. Provides an interface for managing\n * - classes\n * - dom\n * - inner text\n * - event handlers\n * - event dispatch\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nclass MDCIconToggleAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {string} text */\n  setText(text) {}\n\n  /** @return {number} */\n  getTabIndex() {}\n\n  /** @param {number} tabIndex */\n  setTabIndex(tabIndex) {}\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  getAttr(name) {}\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttr(name, value) {}\n\n  /** @param {string} name */\n  rmAttr(name) {}\n\n  /** @param {!IconToggleEvent} evtData */\n  notifyChange(evtData) {}\n}\n\n/**\n * @typedef {!{\n *   isOn: boolean,\n * }}\n */\nlet IconToggleEvent;\n\nexport {MDCIconToggleAdapter, IconToggleEvent};\n\n\n\n// WEBPACK FOOTER //\n// /Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/adapter.js","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCIconToggleFoundation from './foundation';\nimport {MDCRipple, MDCRippleFoundation} from '@material/ripple/index';\n\n/**\n * @extends {MDCComponent<!MDCIconToggleFoundation>}\n */\nclass MDCIconToggle extends MDCComponent {\n  static attachTo(root) {\n    return new MDCIconToggle(root);\n  }\n\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!MDCRipple} */\n    this.ripple_ = this.initRipple_();\n  }\n\n  /** @return {!Element} */\n  get iconEl_() {\n    const {'iconInnerSelector': sel} = this.root_.dataset;\n    return sel ?\n      /** @type {!Element} */ (this.root_.querySelector(sel)) : this.root_;\n  }\n\n  /**\n   * @return {!MDCRipple}\n   * @private\n   */\n  initRipple_() {\n    const adapter = Object.assign(MDCRipple.createAdapter(this), {\n      isUnbounded: () => true,\n      isSurfaceActive: () => this.foundation_.isKeyboardActivated(),\n    });\n    const foundation = new MDCRippleFoundation(adapter);\n    return new MDCRipple(this.root_, foundation);\n  }\n\n  destroy() {\n    this.ripple_.destroy();\n    super.destroy();\n  }\n\n  /** @return {!MDCIconToggleFoundation} */\n  getDefaultFoundation() {\n    return new MDCIconToggleFoundation({\n      addClass: (className) => this.iconEl_.classList.add(className),\n      removeClass: (className) => this.iconEl_.classList.remove(className),\n      registerInteractionHandler: (type, handler) => this.root_.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) => this.root_.removeEventListener(type, handler),\n      setText: (text) => this.iconEl_.textContent = text,\n      getTabIndex: () => /* number */ this.root_.tabIndex,\n      setTabIndex: (tabIndex) => this.root_.tabIndex = tabIndex,\n      getAttr: (name, value) => this.root_.getAttribute(name, value),\n      setAttr: (name, value) => this.root_.setAttribute(name, value),\n      rmAttr: (name) => this.root_.removeAttribute(name),\n      notifyChange: (evtData) => this.emit(MDCIconToggleFoundation.strings.CHANGE_EVENT, evtData),\n    });\n  }\n\n  initialSyncWithDOM() {\n    this.on = this.root_.getAttribute(MDCIconToggleFoundation.strings.ARIA_PRESSED) === 'true';\n    this.disabled = this.root_.getAttribute(MDCIconToggleFoundation.strings.ARIA_DISABLED) === 'true';\n  }\n\n  /** @return {!MDCRipple} */\n  get ripple() {\n    return this.ripple_;\n  }\n\n  /** @return {boolean} */\n  get on() {\n    return this.foundation_.isOn();\n  }\n\n  /** @param {boolean} isOn */\n  set on(isOn) {\n    this.foundation_.toggle(isOn);\n  }\n\n  /** @return {boolean} */\n  get disabled() {\n    return this.foundation_.isDisabled();\n  }\n\n  /** @param {boolean} isDisabled */\n  set disabled(isDisabled) {\n    this.foundation_.setDisabled(isDisabled);\n  }\n\n  refreshToggleData() {\n    this.foundation_.refreshToggleData();\n  }\n}\n\nexport {MDCIconToggle, MDCIconToggleFoundation};\n\n\n\n// WEBPACK FOOTER //\n// /Users/prateekbh/projects/preact-material-components/node_modules/@material/icon-toggle/index.js","module.exports = \"import {h, Component} from 'preact';\\nimport IconToggle from 'preact-material-components/IconToggle';\\nimport 'preact-material-components/IconToggle/style.css';\\n\\nexport default class IconTogglePage extends Component {\\n  render(){\\n    const toggleOnIcon = {\\n      content: \\\"favorite\\\",\\n      label: \\\"Remove From Favorites\\\"\\n    };\\n    const toggleOffIcon = {\\n      content: \\\"favorite_border\\\",\\n      label: \\\"Add to Favorites\\\"\\n    };\\n    return (\\n      <div>\\n        <IconToggle\\n          role=\\\"button\\\"\\n          tabindex=\\\"0\\\"\\n          aria-pressed=\\\"false\\\"\\n          aria-label=\\\"Add to favorites\\\"\\n          data-toggle-on={toggleOnIcon}\\n          data-toggle-off={toggleOffIcon}\\n        >\\n          favorite_border\\n        </IconToggle>\\n      </div>\\n    );\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./routes/icon-toggle/sample.txt\n// module id = oqLc\n// module chunks = 14","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _preact = require('preact');\n\nvar _iconToggle = require('@material/icon-toggle/');\n\nvar _MaterialComponent2 = require('../MaterialComponent');\n\nvar _MaterialComponent3 = _interopRequireDefault(_MaterialComponent2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @prop disabled = false\n */\nvar IconToggle = function (_MaterialComponent) {\n  _inherits(IconToggle, _MaterialComponent);\n\n  function IconToggle() {\n    _classCallCheck(this, IconToggle);\n\n    var _this = _possibleConstructorReturn(this, (IconToggle.__proto__ || Object.getPrototypeOf(IconToggle)).call(this));\n\n    _this.componentName = 'icon-toggle';\n    _this._onChange = _this._onChange.bind(_this);\n    return _this;\n  }\n\n  _createClass(IconToggle, [{\n    key: '_onChange',\n    value: function _onChange(e) {\n      if (this.props.onChange) {\n        this.props.onChange(e);\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.MDComponent = new _iconToggle.MDCIconToggle(this.control);\n      this.MDComponent.listen('MDCIconToggle:change', this._onChange);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.MDComponent.unlisten('MDCIconToggle:change', this._onChange);\n      this.MDComponent.destroy && this.MDComponent.destroy();\n    }\n  }, {\n    key: 'materialDom',\n    value: function materialDom(props) {\n      if (props['data-toggle-on']) props['data-toggle-on'] = JSON.stringify(props['data-toggle-on']);\n      if (props['data-toggle-off']) props['data-toggle-off'] = JSON.stringify(props['data-toggle-off']);\n      return (0, _preact.h)(\n        'i',\n        _extends({}, props, { className: 'material-icons', ref: this.setControlRef }),\n        props.children\n      );\n    }\n  }]);\n\n  return IconToggle;\n}(_MaterialComponent3.default);\n\nexports.default = IconToggle;\n\n\n// WEBPACK FOOTER //\n// /Users/prateekbh/projects/preact-material-components/IconToggle/index.js","// Dependencies\nimport {h, Component} from 'preact';\n\n// Material Components\nimport IconToggle from '../../../../IconToggle';\n\n// Components\nimport ComponentTable from '../../components/component-table';\nimport CodeBlock from '../../components/code-block';\n\n// Samples\nimport sample from './sample.txt';\n\n// Class\nexport default class IconTogglePage extends Component {\n  constructor() {\n    super();\n    this.propsTable = [\n      {\n        component: 'IconToggle',\n        props: [\n          {\n            name: 'disabled',\n            description: 'Is the icon disabled'\n          },\n          {\n            name: 'data-toggle-on',\n            description: 'JSON object for toggle on icon'\n          },\n          {\n            name: 'data-toggle-off',\n            description: 'JSON object for toggle off icon'\n          }\n        ]\n      }\n    ];\n  }\n  render() {\n    const toggleOnIcon = {\n      content: 'favorite',\n      label: 'Remove From Favorites'\n    };\n    const toggleOffIcon = {\n      content: 'favorite_border',\n      label: 'Add to Favorites'\n    };\n    return (\n      <div>\n        <ComponentTable data={this.propsTable} />\n\n        <div className=\"mdc-typography--display1\">Sample code </div>\n        <CodeBlock>\n          <code class=\"lang-js\">{sample}</code>\n        </CodeBlock>\n\n        <div className=\"mdc-typography--display1\">Original documentation</div>\n        <div className=\"mdc-typography--body\">\n          This component encapsulates{' '}\n          <span className=\"strong\">mdc-icon-toggle</span>, you can refer to its\n          documentation\n          <a href=\"https://github.com/material-components/material-components-web/tree/master/packages/mdc-icon-toggle\">\n            {' '}\n            here\n          </a>.\n        </div>\n\n        <div className=\"mdc-typography--display1\">Demo </div>\n        <IconToggle\n          role=\"button\"\n          tabindex=\"0\"\n          aria-pressed=\"false\"\n          aria-label=\"Add to favorites\"\n          data-toggle-on={toggleOnIcon}\n          data-toggle-off={toggleOffIcon}>\n          favorite_border\n        </IconToggle>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./routes/icon-toggle/index.js"],"sourceRoot":""}