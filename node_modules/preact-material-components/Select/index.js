"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _preact = require("preact");

var _MaterialComponent = _interopRequireDefault(require("../MaterialComponent"));

var _select = require("@material/select/");

var _List = _interopRequireDefault(require("../List"));

var _Menu = _interopRequireDefault(require("../Menu"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Select extends _MaterialComponent.default {
  constructor() {
    super();
    this.componentName = 'select';
    this._mdcProps = ['disabled', 'box'];
    this._changed = this._changed.bind(this);
  }

  _changed(e) {
    e = e || {};
    e.selectedIndex = e.selectedIndex || this.MDComponent.selectedIndex;
    e.selectedOptions = e.selectedOptions || this.MDComponent.selectedOptions;

    if (this.props.onChange) {
      this.props.onChange(e);
    }
  }

  componentDidMount() {
    this.MDComponent = new _select.MDCSelect(this.base);
    this.MDComponent.listen('MDCSelect:change', this._changed);
    this.updateSelection();
  }

  componentWillUnmount() {
    this.MDComponent.unlisten('MDCSelect:change', this._changed);
    this.MDComponent.destroy && this.MDComponent.destroy();
  }

  updateSelection() {
    if ('selectedIndex' in this.props) {
      const selectedIndex = typeof this.props.selectedIndex === 'number' ? this.props.selectedIndex : 0;
      this.MDComponent.selectedIndex = selectedIndex;
    }

    const selectedIndex = this.MDComponent.selectedIndex;

    if (selectedIndex === 0) {
      this._labelRef.classList.remove('mdc-select__label--float-above');
    } else {
      this._labelRef.classList.add('mdc-select__label--float-above');
    }
  }

  componentDidUpdate() {
    this.updateSelection();
  }

  materialDom(props) {
    return (0, _preact.h)("div", props, (0, _preact.h)("select", {
      "class": "mdc-select__native-control"
    }, props.hintText && (0, _preact.h)("option", {
      value: "",
      disabled: true,
      selected: true
    }), props.children), props.hintText && (0, _preact.h)("div", {
      "class": "mdc-select__label",
      ref: _ref => {
        this._labelRef = _ref;
      }
    }, props.hintText), (0, _preact.h)("div", {
      "class": "mdc-select__bottom-line"
    }));
  }

}

class SelectOption extends _List.default.Item {
  materialDom(props) {
    return (0, _preact.h)("option", props, props.children);
  }

}

Select.Item = SelectOption;
var _default = Select;
exports.default = _default;