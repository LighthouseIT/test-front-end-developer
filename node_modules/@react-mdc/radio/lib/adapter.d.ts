/// <reference types="react" />
/**
 * Foundation adapters.
 */
/**
 * Container adapter interface
 * Default implementations are noop and returns meaningless value.
 */
export declare class ContainerAdapter {
    addClass(_className: string): void;
    removeClass(_className: string): void;
    isChecked(): boolean | null;
}
/**
 * Native control adapter interface
 * Default implementations are noop and returns meaningless value.
 */
export declare class NativeControlAdapter<ChildProps> {
    getNativeControl(): Element | null;
    setDefaultOnChangeHandler(_onChange: React.ChangeEventHandler<ChildProps>): void;
}
/**
 * Composite adapter for MDCRadioFoundation
 */
export declare class FoundationAdapter<ChildProps> {
    private nativeControlAdapter;
    private containerAdapter;
    private defaultOnchangeHandler;
    constructor();
    setContainerAdapter(containerAdapter: ContainerAdapter): void;
    setNativeControlAdapter(nativeControlAdapter: NativeControlAdapter<ChildProps>): void;
    addClass(className: string): void;
    removeClass(className: string): void;
    getNativeControl(): Element | null;
    setDefaultOnChangeHandler(onChange: React.ChangeEventHandler<ChildProps>): void;
    isChecked(): boolean | null;
    /**
     * MDCFoundation accepts only object as adapter
     * So we create object-proxy of instance.
     */
    toObject(): {};
}
