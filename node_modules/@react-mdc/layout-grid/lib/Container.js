"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var base_1 = require("@react-mdc/base");
var constants_1 = require("./constants");
var utils = require("./utils");
exports.CLASS_NAME = constants_1.BASE_CLASS_NAME;
/**
 * Wrapper component of mdc-layout-grid
 */
var Meta = (function (_super) {
    __extends(Meta, _super);
    function Meta() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Meta.prototype.renderNativeDOMProps = function () {
        var cssVariables = {};
        if (this.props.margin != null) {
            cssVariables[constants_1.MARGIN_CSS_VARIABLE] = utils.normalizeMarginAndGutter(this.props.margin);
        }
        if (this.props.gutter != null) {
            cssVariables[constants_1.GUTTER_CSS_VARIABLE] = utils.normalizeMarginAndGutter(this.props.gutter);
        }
        return { cssVariables: cssVariables };
    };
    Meta.prototype.renderBaseClassName = function () {
        return exports.CLASS_NAME;
    };
    return Meta;
}(base_1.ClassNameMetaBase));
exports.Meta = Meta;
var Container = (function (_super) {
    __extends(Container, _super);
    function Container() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Container.prototype.getMetaComponent = function () {
        return Meta;
    };
    Container.prototype.getMetaPropNames = function () {
        return [
            "className",
            "margin",
            "gutter",
        ];
    };
    Container.prototype.getChildComponent = function () {
        return "div";
    };
    Container.Meta = Meta;
    return Container;
}(base_1.DefaultComponentBase));
exports.default = Container;
//# sourceMappingURL=Container.js.map