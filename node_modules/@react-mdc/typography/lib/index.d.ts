/// <reference types="react" />
import Container from "./Container";
import Text from "./Text";
export default class Typography extends Container {
    static Text: typeof Text;
    static Body1: React.StatelessComponent<React.HTMLProps<HTMLElement> & {
        className?: string | undefined;
    } & {
        adjustMargin?: boolean | undefined;
    }>;
    static Body2: React.StatelessComponent<React.HTMLProps<HTMLElement> & {
        className?: string | undefined;
    } & {
        adjustMargin?: boolean | undefined;
    }>;
    static Caption: React.StatelessComponent<React.HTMLProps<HTMLElement> & {
        className?: string | undefined;
    } & {
        adjustMargin?: boolean | undefined;
    }>;
    static Display1: React.StatelessComponent<React.HTMLProps<HTMLElement> & {
        className?: string | undefined;
    } & {
        adjustMargin?: boolean | undefined;
    }>;
    static Display2: React.StatelessComponent<React.HTMLProps<HTMLElement> & {
        className?: string | undefined;
    } & {
        adjustMargin?: boolean | undefined;
    }>;
    static Display3: React.StatelessComponent<React.HTMLProps<HTMLElement> & {
        className?: string | undefined;
    } & {
        adjustMargin?: boolean | undefined;
    }>;
    static Display4: React.StatelessComponent<React.HTMLProps<HTMLElement> & {
        className?: string | undefined;
    } & {
        adjustMargin?: boolean | undefined;
    }>;
    static Headline: React.StatelessComponent<React.HTMLProps<HTMLElement> & {
        className?: string | undefined;
    } & {
        adjustMargin?: boolean | undefined;
    }>;
    static Subheading1: React.StatelessComponent<React.HTMLProps<HTMLElement> & {
        className?: string | undefined;
    } & {
        adjustMargin?: boolean | undefined;
    }>;
    static Subheading2: React.StatelessComponent<React.HTMLProps<HTMLElement> & {
        className?: string | undefined;
    } & {
        adjustMargin?: boolean | undefined;
    }>;
    static Title: React.StatelessComponent<React.HTMLProps<HTMLElement> & {
        className?: string | undefined;
    } & {
        adjustMargin?: boolean | undefined;
    }>;
}
