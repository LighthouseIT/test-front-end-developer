"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Decorate event handler function with default handler.
 * Default handler will not be called when decorated handler prevents default.
 *
 * Example:
 *
 *     let {onClick} = this.props;
 *     onClick = eventHandlerDecorator(this.handleClick)(onClick);
 *
 * @param handler a default event handler.
 *
 * @return event handler decorator with default functionally.
 *         decorated function can be null
 */
function eventHandlerDecorator(defaultHandler) {
    return function (handler) { return function (evt) {
        if (handler != null) {
            handler(evt);
        }
        if (!evt.isDefaultPrevented()) {
            defaultHandler(evt);
        }
    }; };
}
exports.eventHandlerDecorator = eventHandlerDecorator;
/**
 * Array inclusion tester
 */
function includes(array, item, predicate) {
    if (predicate === void 0) { predicate = function (x, y) { return x === y; }; }
    // tslint:disable:prefer-for-of
    for (var i = 0; i < array.length; i++) {
        var itemAtIndex = array[i];
        if (predicate(item, itemAtIndex)) {
            return true;
        }
    }
    return false;
}
exports.includes = includes;
//# sourceMappingURL=util.js.map