"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var base_1 = require("@react-mdc/base");
var button_1 = require("@react-mdc/button");
var constants_1 = require("./constants");
exports.CLASS_NAME = constants_1.BASE_CLASS_NAME + "__button";
exports.propertyClassNames = {
    TYPE_ACCEPT: exports.CLASS_NAME + "--accept",
    TYPE_CANCEL: exports.CLASS_NAME + "--cancel",
};
/**
 * Button component
 */
var Meta = (function (_super) {
    __extends(Meta, _super);
    function Meta() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Meta.prototype.renderBaseClassName = function () {
        return exports.CLASS_NAME;
    };
    Meta.prototype.renderClassValues = function () {
        return [(_a = {},
                _a[exports.propertyClassNames.TYPE_ACCEPT] = this.props.type === "accept",
                _a[exports.propertyClassNames.TYPE_CANCEL] = this.props.type === "cancel",
                _a)];
        var _a;
    };
    return Meta;
}(base_1.ClassNameMetaBase));
exports.Meta = Meta;
var Button = (function (_super) {
    __extends(Button, _super);
    function Button() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Button.prototype.getMetaComponent = function () {
        return Meta;
    };
    Button.prototype.getMetaPropNames = function () {
        return [
            "type",
            "className",
        ];
    };
    Button.prototype.getChildComponent = function () {
        return button_1.default;
    };
    Button.Meta = Meta;
    return Button;
}(base_1.DefaultComponentBase));
exports.default = Button;
//# sourceMappingURL=Button.js.map