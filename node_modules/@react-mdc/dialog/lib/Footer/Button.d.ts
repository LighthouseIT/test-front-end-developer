/// <reference types="react" />
import { ClassNameMetaBase, DefaultComponentBase } from "@react-mdc/base";
import MDCButton from "@react-mdc/button";
import { MetaProps as MDCButtonMetaProps } from "@react-mdc/button/lib/Button";
export declare const CLASS_NAME: string;
export declare type MetaProps = {
    type: "accept" | "cancel";
    className?: string;
};
export declare type ChildProps = {
    className?: string;
};
export declare const propertyClassNames: {
    TYPE_ACCEPT: string;
    TYPE_CANCEL: string;
};
/**
 * Button component
 */
export declare class Meta extends ClassNameMetaBase<ChildProps, MetaProps, {}> {
    protected renderBaseClassName(): string;
    protected renderClassValues(): {
        [x: string]: boolean;
    }[];
}
export default class Button extends DefaultComponentBase<React.HTMLProps<HTMLButtonElement> & MDCButtonMetaProps, MetaProps, {}> {
    static Meta: typeof Meta;
    protected getMetaComponent(): typeof Meta;
    protected getMetaPropNames(): string[];
    protected getChildComponent(): typeof MDCButton;
}
