"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var mdc_textfield_1 = require("@material/textfield/dist/mdc.textfield");
var immutable_1 = require("immutable");
var PropTypes = require("prop-types");
var base_1 = require("@react-mdc/base");
var adapter_1 = require("./adapter");
var constants_1 = require("./constants");
exports.CLASS_NAME = constants_1.BASE_CLASS_NAME;
exports.propertyClassNames = {
    PREFIX: exports.CLASS_NAME,
    MULTILINE: exports.CLASS_NAME + "--multiline",
    FULLWIDTH: exports.CLASS_NAME + "--fullwidth",
};
/**
 * Textfield input container component
 */
var Meta = (function (_super) {
    __extends(Meta, _super);
    function Meta(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            foundationClasses: immutable_1.OrderedSet(),
        };
        _this.adapter = new adapter_1.FoundationAdapter();
        _this.foundation = new mdc_textfield_1.MDCTextfieldFoundation(_this.adapter.toObject());
        return _this;
    }
    // Foundation lifecycle
    Meta.prototype.componentDidMount = function () {
        this.adapter.setContainerAdapter(new ContainerAdapterImpl(this));
        this.foundation.init();
    };
    Meta.prototype.componentWillUnmount = function () {
        this.foundation.destroy();
        this.adapter.setContainerAdapter(new adapter_1.ContainerAdapter());
    };
    Meta.prototype.getChildContext = function () {
        return {
            adapter: this.adapter,
        };
    };
    Meta.prototype.renderBaseClassName = function () {
        return exports.CLASS_NAME;
    };
    Meta.prototype.renderClassValues = function () {
        return [(_a = {},
                _a[exports.propertyClassNames.MULTILINE] = this.props.multiline,
                _a[exports.propertyClassNames.FULLWIDTH] = this.props.fullwidth,
                _a), this.state.foundationClasses.toJS()];
        var _a;
    };
    Meta.childContextTypes = {
        adapter: PropTypes.instanceOf(adapter_1.FoundationAdapter),
    };
    return Meta;
}(base_1.ClassNameMetaBase));
exports.Meta = Meta;
var ContainerAdapterImpl = (function (_super) {
    __extends(ContainerAdapterImpl, _super);
    function ContainerAdapterImpl(element) {
        var _this = _super.call(this) || this;
        _this.element = element;
        return _this;
    }
    ContainerAdapterImpl.prototype.addClass = function (className) {
        this.element.setState(function (state) { return ({
            foundationClasses: state.foundationClasses.add(className),
        }); });
    };
    ContainerAdapterImpl.prototype.removeClass = function (className) {
        this.element.setState(function (state) { return ({
            foundationClasses: state.foundationClasses.remove(className),
        }); });
    };
    return ContainerAdapterImpl;
}(adapter_1.ContainerAdapter));
var Container = (function (_super) {
    __extends(Container, _super);
    function Container() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Container.prototype.getMetaComponent = function () {
        return Meta;
    };
    Container.prototype.getMetaPropNames = function () {
        return [
            "disabled",
            "multiline",
            "fullwidth",
        ];
    };
    Container.prototype.getChildComponent = function () {
        return "div";
    };
    Container.Meta = Meta;
    return Container;
}(base_1.DefaultComponentBase));
exports.default = Container;
//# sourceMappingURL=Container.js.map