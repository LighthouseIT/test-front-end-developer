"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Container_1 = require("./Container");
// Typescript transpiler does not compile following line.
// I don't know why, and it seems to be bug of typescript
//
// import Input from "./Input";
//
// We bypass the bug using following lines
/* ---from here --- */
var InputModule = require("./Input");
// tslint:disable:variable-name
var Input = InputModule.default;
/**
 * Internal default composed component
 */
var TextFieldInternal = (function (_super) {
    __extends(TextFieldInternal, _super);
    function TextFieldInternal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TextFieldInternal.prototype.render = function () {
        var _a = this.props, containerProps = _a.containerProps, inputProps = _a.inputProps;
        return (React.createElement(Container_1.default, __assign({}, containerProps),
            React.createElement(Input, __assign({}, inputProps))));
    };
    return TextFieldInternal;
}(React.Component));
/**
 * Textfield simple common composed component
 */
var Default = (function (_super) {
    __extends(Default, _super);
    function Default() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Default.prototype.render = function () {
        var _a = this.props, inputId = _a.inputId, name = _a.name, value = _a.value, onChange = _a.onChange, placeholder = _a.placeholder, disabled = _a.disabled, props = __rest(_a, ["inputId", "name", "value", "onChange", "placeholder", "disabled"]);
        var containerProps = __assign({ disabled: disabled }, props);
        var inputProps = {
            id: inputId,
            name: name,
            value: value,
            onChange: onChange,
            placeholder: placeholder,
            disabled: disabled,
        };
        return (React.createElement(TextFieldInternal, { containerProps: containerProps, inputProps: inputProps }));
    };
    return Default;
}(React.Component));
exports.default = Default;
//# sourceMappingURL=Default.js.map