{
  "_args": [
    [
      {
        "raw": "@material/toolbar@^0.35.0",
        "scope": "@material",
        "escapedName": "@material%2ftoolbar",
        "name": "@material/toolbar",
        "rawSpec": "^0.35.0",
        "spec": ">=0.35.0 <0.36.0",
        "type": "range"
      },
      "D:\\Dropbox\\Dashboard - Filipe\\node_modules\\material-components-web"
    ]
  ],
  "_from": "@material/toolbar@>=0.35.0 <0.36.0",
  "_id": "@material/toolbar@0.35.0",
  "_inCache": true,
  "_location": "/@material/toolbar",
  "_nodeVersion": "8.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/toolbar_0.35.0_1524523259487_0.19557835755622643"
  },
  "_npmUser": {
    "name": "bonniez",
    "email": "bonniez@google.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@material/toolbar@^0.35.0",
    "scope": "@material",
    "escapedName": "@material%2ftoolbar",
    "name": "@material/toolbar",
    "rawSpec": "^0.35.0",
    "spec": ">=0.35.0 <0.36.0",
    "type": "range"
  },
  "_requiredBy": [
    "/material-components-web"
  ],
  "_resolved": "https://registry.npmjs.org/@material/toolbar/-/toolbar-0.35.0.tgz",
  "_shasum": "f50a7ba7e6acda4fc03ca5044b1e88d5be974a23",
  "_shrinkwrap": null,
  "_spec": "@material/toolbar@^0.35.0",
  "_where": "D:\\Dropbox\\Dashboard - Filipe\\node_modules\\material-components-web",
  "bugs": {
    "url": "https://github.com/material-components/material-components-web/issues"
  },
  "dependencies": {
    "@material/base": "^0.35.0",
    "@material/elevation": "^0.35.0",
    "@material/ripple": "^0.35.0",
    "@material/rtl": "^0.35.0",
    "@material/theme": "^0.35.0",
    "@material/typography": "^0.35.0"
  },
  "description": "The Material Components for the web toolbar component",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-TxRjulzd49IGTT+rvBHNa2cMkgxk3A2pbZ3z4Te191ynNVegNxjbbDpgIBVC3gqKqTEYy51iPKUh2tDHc+6oow==",
    "shasum": "f50a7ba7e6acda4fc03ca5044b1e88d5be974a23",
    "tarball": "https://registry.npmjs.org/@material/toolbar/-/toolbar-0.35.0.tgz",
    "fileCount": 12,
    "unpackedSize": 181450,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa3mD9CRA9TVsSAnZWagAAl0QP/28rPiaoKVGIvBxGw9YF\nGfHAZrkIAtDNNNpzsZGW1rEn6DOapc+wtpqM+wMh8HDiRb9sM1K6A7IArXnr\nPkhDHLUGwNcEmMXOPm3D3nNx9fuolfBtZVWHQepkw0rNVcuhjLctmJjPCddd\nzUOYNnMb1iKhrl83tHVOJ0R+ns9+jIch4p5j9vN83CnMsPiRxx4wNn7fTvsp\npg9LauSuQ5QybMrNDVWyLI2IEwOBoQeQ6qrto5dALaEf/4JKpEe8hje18Djv\nleTIpBC+A/MvDuGU01nEt85KgxLAYic0fkGSd0TscxJSRoloOJ4gDdoV/+e9\nbThJ/avpt+Fn0MDElbsskVMDc1GozbLxksbheXt+x1hzs6vwgX/ddJFldNBO\n+6DeitAGF5u2tDQpUMriGQRw2Ly+XfPf+0fWt6r9wzHFyTOALWHT+6UI4dX3\nR7Zw0naO8pvMpQd1epytEkvv3S4hGi8Z3rZUiPA9ICeRp2CZCALFtHexD/cu\n6+e8d+lL7JW4iq3JbMHTmjJPpLaGFmmWPGfecofFrJJi+9ijB+M81kFu3Khr\nXzmEF/C6jls9JM6AyslxZsTsRcpVD522xZ6YlaF6g8+ada7ANuOFhvS+14le\n16b5HOKDvp2v/LnJxZ5lwbq5foUjjg/L5jE1/86G8KJqyojfF70noqcsesH6\nJkcd\r\n=ELve\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/material-components/material-components-web#readme",
  "keywords": [
    "material components",
    "material design",
    "toolbar"
  ],
  "license": "Apache-2.0",
  "maintainers": [
    {
      "name": "abhiomkar",
      "email": "abhiomkar@gmail.com"
    },
    {
      "name": "acdvorak",
      "email": "acdvorak@gmail.com"
    },
    {
      "name": "aprigogin",
      "email": "andrey.prigogin@gmail.com"
    },
    {
      "name": "azakus",
      "email": "dfreedm2@gmail.com"
    },
    {
      "name": "bonniez",
      "email": "bonniez@google.com"
    },
    {
      "name": "bwobrien",
      "email": "obrien.test@gmail.com"
    },
    {
      "name": "kfranqueiro",
      "email": "kenneth.franqueiro@gmail.com"
    },
    {
      "name": "lynnjepsen",
      "email": "lynnjepsen@google.com"
    },
    {
      "name": "material-admin",
      "email": "lynnjepsen+npm@google.com"
    },
    {
      "name": "moog16",
      "email": "mattgoo@gmail.com"
    },
    {
      "name": "patrickrodee",
      "email": "prodee@google.com"
    },
    {
      "name": "williamernest",
      "email": "williamernest@google.com"
    }
  ],
  "name": "@material/toolbar",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "<!--docs:\ntitle: \"Toolbars\"\nlayout: detail\nsection: components\nexcerpt: \"A container for multiple rows of items such as application title, navigation menu, or tabs.\"\niconId: toolbar\npath: /catalog/toolbar/\n-->\n\n## Important - Deprecation Notice\n\nThe existing `MDCToolbar` component and styles will be removed in a future release. Some of its functionality\nwill be available in the [MDC Top App Bar](../mdc-top-app-bar) package instead. Bugs and feature requests\nwill no longer be accepted for the `mdc-toolbar` package. It is recommended that you migrate to the\n`mdc-top-app-bar` package to continue to receive new features and updates.\n\n# Toolbars\n\n<!--<div class=\"article__asset\">\n  <a class=\"article__asset-link\"\n     href=\"https://material-components-web.appspot.com/toolbar/index.html\">\n    <img src=\"{{ site.rootpath }}/images/mdc_web_screenshots/toolbars.png\" width=\"494\" alt=\"Toolbars screenshot\">\n  </a>\n</div>-->\n\nMDC Toolbar acts as a container for multiple rows containing items such as\napplication title, navigation menu, and tabs, among other things. Toolbars\nscroll with content by default, but support fixed behavior as well.\n\nWhen using the **fixed** pattern, a persistent elevation is added to toolbar.\nWhen using the **waterfall** pattern, a toolbar will have no elevation when the\npage is scrolled to the top, and gain elevation when a user begins to scroll\ndown the page. Toolbars also support anchored only last row at the top behavior.\nFor toolbars with this modifier, only the last row will be anchored at the top,\nwhile the rest of toolbar scrolls off.\n\nFlexible behavior can be added to mdc-toolbar, where the height of the toolbar\nchanges as the user scrolls. Flexible is defined as a modifier class of toolbar\nbut not a standalone component. Toolbars using this modifier will have additional\nheight added to their first rows.\n\n## Design & API Documentation\n\n<ul class=\"icon-list\">\n  <li class=\"icon-list-item icon-list-item--spec\">\n    <a href=\"https://material.io/guidelines/components/toolbars.html\">Material Design guidelines: Toolbars</a>\n  </li>\n  <li class=\"icon-list-item icon-list-item--link\">\n    <a href=\"https://material-components-web.appspot.com/toolbar/index.html\">Demo</a>\n  </li>\n</ul>\n\n## Installation\n\n```\nnpm install @material/toolbar\n```\n\n## Usage\n\nWrap the items with `mdc-toolbar` class in the following way:\n\n```html\n<header class=\"mdc-toolbar\">\n  <div class=\"mdc-toolbar__row\">\n    <section class=\"mdc-toolbar__section mdc-toolbar__section--align-start\">\n      <a href=\"#\" class=\"material-icons mdc-toolbar__menu-icon\">menu</a>\n      <span class=\"mdc-toolbar__title\">Title</span>\n    </section>\n  </div>\n</header>\n```\n\nMDC Toolbars can accommodate multiple rows using the wrapper `mdc-toolbar__row`:\n\n```html\n<header class=\"mdc-toolbar\">\n  <div class=\"mdc-toolbar__row\">\n    <section class=\"mdc-toolbar__section mdc-toolbar__section--align-start\">\n      <a href=\"#\" class=\"material-icons mdc-toolbar__menu-icon\">menu</a>\n      <span class=\"mdc-toolbar__title\">Title</span>\n    </section>\n  </div>\n  <div class=\"mdc-toolbar__row\">\n    ...\n  </div>\n</header>\n```\n\n#### Sections\n\nToolbar sections are aligned to the toolbar's center. You can change this\nbehavior by applying `mdc-toolbar__section--align-start` or\n`mdc-toolbar__section--align-end` to align the sections to the start or the end\nof the toolbar (respectively).\n\n```html\n<header class=\"mdc-toolbar\">\n  <div class=\"mdc-toolbar__row\">\n    <section class=\"mdc-toolbar__section mdc-toolbar__section--align-start\">\n      Section aligns to start.\n    </section>\n    <section class=\"mdc-toolbar__section\">\n      Section aligns to center.\n    </section>\n    <section class=\"mdc-toolbar__section mdc-toolbar__section--align-end\">\n      Section aligns to end.\n    </section>\n  </div>\n</header>\n```\n\nToolbar sections are laid out using flexbox. Each section will take up an equal\namount of space within the toolbar by default. But you can accommodate very long section (very long title)\nby adding `mdc-toolbar__section--shrink-to-fit` to other sections.\n\n```html\n<div class=\"mdc-toolbar\">\n  <div class=\"mdc-toolbar__row\">\n      <section class=\"mdc-toolbar__section mdc-toolbar__section--align-start\">\n        <span class=\"mdc-toolbar__title\">This is a super super super super long title</span>\n      </section>\n      <section class=\"mdc-toolbar__section mdc-toolbar__section--align-end mdc-toolbar__section--shrink-to-fit\">\n        <a class=\"material-icons search align-icons\" aria-label=\"Search\" alt=\"Search\">search</a>\n      </section>\n  </div>\n</div>\n```\n\n#### Toolbar title\n\nYou can use the `mdc-toolbar__title` element to style toolbar text representing\na page's title, or an application name.\n\n```html\n<header class=\"mdc-toolbar\">\n  <div class=\"mdc-toolbar__row\">\n    <section class=\"mdc-toolbar__section\">\n      <span class=\"mdc-toolbar__title\">Title</span>\n    </section>\n  </div>\n</header>\n```\n\n#### Toolbar Icons\n\nIcons can be added as anchor tags, `span`s, or `button`s to `mdc-toolbar`. There are two types of icons,\n`mdc-toolbar__menu-icon` represents the left most icon in `mdc-toolbar` usually to the left of `mdc-toolbar__title`.\n`mdc-toolbar__icon` represents any icons placed on the right side of an `mdc-toolbar`.\n\nWhen using `svg` icons, ensure you wrap the `svg` element in an `a` and include the `mdc-toolbar__icon` class.\n\n```html\n<a href=\"#\" class=\"mdc-toolbar__icon\">\n  <svg></svg>\n</a>\n```\n\n### Fixed toolbars\n\nBy default, toolbars scroll with the page content. To keep the toolbar fixed to\nthe top of the screen, add an `mdc-toolbar--fixed` class to the toolbar element.\n\n**Adjusting sibling elements of fixed toolbars**\n\nWhen using `mdc-toolbar--fixed`, you need to set the margin of the content to\nprevent toolbar overlaying your content. You can add the `mdc-toolbar-fixed-adjust`\nhelper class to the toolbar's adjacent sibling element, which will add default\n`margin-top`.\n\nWhen you are using `mdc-toolbar` with JavaScript, you should assign your content\nwrapper element to `mdc-toolbar`'s instance property `fixedAdjustElement`. This\nwill make `mdc-toolbar` aware of the wrapper class and adjust the `margin-top`\ncorrespondingly.\n\n```html\n<header class=\"mdc-toolbar mdc-toolbar--fixed\">\n  <div class=\"mdc-toolbar__row\">\n    <section class=\"mdc-toolbar__section mdc-toolbar__section--align-start\">\n      <span class=\"mdc-toolbar__title\">Title</span>\n    </section>\n  </div>\n</header>\n<main class=\"mdc-toolbar-fixed-adjust\">\n  <p class=\"demo-paragraph\">\n    A demo paragraph here.\n  </p>\n</main>\n\n// When you are using toolbar with JavaScript\n<script>\n  var toolbar = mdc.toolbar.MDCToolbar.attachTo(document.querySelector('.mdc-toolbar'));\n  toolbar.fixedAdjustElement = document.querySelector('.mdc-toolbar-fixed-adjust');\n</script>\n```\n\n#### Waterfall toolbars (Requires JavaScript)\n\nBy adding `mdc-toolbar--waterfall` to `mdc-toolbar--fixed`, fixed toolbars become\nwaterfall toolbars. Waterfall toolbar is _initially_ static and has no elevation,\nand then when the user starts scrolling _becomes_ fixed and _gains_ elevation.\n\n```html\n<header class=\"mdc-toolbar mdc-toolbar--fixed mdc-toolbar--waterfall\">\n  <div class=\"mdc-toolbar__row\">\n    <section class=\"mdc-toolbar__section mdc-toolbar__section--align-start\">\n      <span class=\"mdc-toolbar__title\">Title</span>\n    </section>\n  </div>\n</header>\n<main class=\"mdc-toolbar-fixed-adjust\">\n  <p class=\"demo-paragraph\">\n    A demo paragraph here.\n  </p>\n</main>\n\n<script>\n  var toolbar = mdc.toolbar.MDCToolbar.attachTo(document.querySelector('.mdc-toolbar'));\n  toolbar.fixedAdjustElement = document.querySelector('.mdc-toolbar-fixed-adjust');\n</script>\n```\n\n#### Fixed Last Row Toolbar (Requires JavaScript)\n\nBy adding `mdc-toolbar--fixed-lastrow-only` to `mdc-toolbar--fixed`, fixed toolbars\nwill anchor only the last row to the top.\n\n```html\n<header class=\"mdc-toolbar mdc-toolbar--fixed mdc-toolbar--fixed-lastrow-only\">\n  <div class=\"mdc-toolbar__row\">\n    <!-- This row will scroll off screen -->\n  </div>\n  <div class=\"mdc-toolbar__row\">\n    <!-- This row will anchor on top of screen -->\n  </div>\n</header>\n```\n\n### Flexible Toolbar (Requires JavaScript)\n\nFlexible behavior can be added to mdc-toolbar, whose height changes as the user\nscrolls. Flexible behavior is highly customizable - we only define the change of\nflexible space size without making further assumptions. But we do recommend the\nheight of flexible space should be an integral number of `mdc-toolbar__row`\nheight and provide a easier way for user to customize height. Users can adjust the\nheight of flexible space through sass variable `$mdc-toolbar-ratio-to-extend-flexible`\nor css variable `--mdc-toolbar-ratio-to-extend-flexible`.\n\n```html\n<header class=\"mdc-toolbar mdc-toolbar--flexible\">\n  <div class=\"mdc-toolbar__row\">\n    ...\n  </div>\n</header>\n```\n\nCustom height of flexible space:\n\n```html\n<style>\n  #my-flexible-header {\n    --mdc-toolbar-ratio-to-extend-flexible: 3;\n  }\n</style>\n<header class=\"mdc-toolbar mdc-toolbar--flexible\">\n  <div class=\"mdc-toolbar__row\">\n    ...\n  </div>\n</header>\n```\n\nFlexible toolbars emit a `change` custom event with a `detail` object containing\n`flexibleExpansionRatio` property. The `flexibleExpansionRatio` property is a\nnumber from 0-1 representing the _ratio of flexible space that has already been\ncollapsed divided by the total amount of flexible space_.\n\n```javascript\ntoolbar.listen('MDCToolbar:change', function(evt) {\n  var flexibleExpansionRatio = evt.detail.flexibleExpansionRatio;\n  console.log(flexibleExpansionRatio.toFixed(2));\n});\n\n```\n\nFor the most common use case of flexible headers, we've defined a **default** behavior:\n- Flexible has a fixed initial height 4 times the default size of `mdc-toolbar__row`.\n- When it has `mdc-toolbar--flexible-default-behavior`, it further defines the\nbackground and title movement behavior.\n\n```html\n<style>\n  .mdc-toolbar__row:first-child::after {\n    background-image: url(\"../images/4-3-2.jpg\");\n    background-size: cover;\n    background-position: center;\n  }\n</style>\n<header class=\"mdc-toolbar mdc-toolbar--flexible mdc-toolbar--flexible-default-behavior\">\n  <div class=\"mdc-toolbar__row\">\n    ...\n  </div>\n</header>\n```\n\n##### Caveat: Complex animation performance\n\nDue to the nature of having to listen for scroll events and mutate height, this\nmay degrade performance in some mobile browsers. For example, combining high\nresolution images with parallax scrolling could lead to severe performance\nissues in certain mobile browsers. When implementing patterns like these for a\nmobile device, ensure that the image is as optimized as possible and carefully\ntest the performance to make sure that it is adequate.\n\n```css\n.mdc-toolbar__row:first-child::after {\n  background-image: url(\"../images/4-3.jpg\");\n  background-size: cover;\n  background-position: center;\n}\n@media (max-width: 599px) {\n  background-image: url(\"../images/4-3-compressed.jpg\");\n  background-position: 0 0;\n}\n```\n\n### RTL Support\n\n`mdc-toolbar` is automatically RTL-aware, and will re-position elements whenever\nit, or its ancestors, has a `dir=\"rtl\"` attribute.\n\n## Classes\n\n### Block\n\nThe block class is `mdc-toolbar`. This defines the top-level toolbar element.\n\n### Element\nThe component accommodates multiple rows using the wrapper `mdc-toolbar__row`.\nFor each row, it has `mdc-toolbar__section` and `mdc-toolbar__title` elements. You\ncan add multiple sections to toolbar. Refer to Sections and Toolbar title for\nfurther details.\n\n### Modifier\n\nThe provided modifiers are:\n\nClass | Description\n--- | ---\n`mdc-toolbar--fixed` | Makes toolbar fixed on top and have persistent elevation\n`mdc-toolbar--waterfall` | Removes fixed toolbar persistent elevation and makes it gain elevation when a user begins to scroll down the page\n`mdc-toolbar--fixed-lastrow-only` | Makes only last row of fixed toolbar anchored on top\n`mdc-toolbar--flexible` | Makes first row of toolbar have flexible space\n`mdc-toolbar__section--align-start` | Makes section align to the start\n`mdc-toolbar__section--align-end` | Makes section align to the end\n`mdc-toolbar__section--shrink-to-fit`| Makes section take the width of its content\n\n## Sass Mixins\n\nMixin | Description\n--- | ---\n`mdc-toolbar-ink-color($color)` | Sets the ink color of the toolbar\n`mdc-toolbar-fill-color($color)` | Sets the fill color of the toolbar\n`mdc-toolbar-fill-color-accessible($color)` | Sets the fill color of the toolbar and automatically sets a high-contrast ink color\n`mdc-toolbar-icon-ink-color($color)` | Sets the ink color of a toolbar icon\n\n## JS Usage\n\n### Including in code\n\n#### ES2015\n\n```javascript\nimport {MDCToolbar, MDCToolbarFoundation} from '@material/toolbar';\n```\n\n#### CommonJS\n\n```javascript\nconst mdcToolbar = require('@material/toolbar');\nconst MDCToolbar = mdcToolbar.MDCToolbar;\nconst MDCToolbarFoundation = mdcToolbar.MDCToolbarFoundation;\n```\n\n#### AMD\n\n```javascript\nrequire(['/path/to/@material/toolbar'], mdcToolbar => {\n  const MDCToolbar = mdcToolbar.MDCToolbar;\n  const MDCToolbarFoundation = mdcToolbar.MDCToolbarFoundation;\n});\n```\n\n#### Global\n\n```javascript\nconst MDCToolbar = mdc.toolbar.MDCToolbar;\nconst MDCToolbarFoundation = mdc.toolbar.MDCToolbarFoundation;\n```\n\n### Automatic Instantiation\n\nIf you do not care about retaining the component instance for the toolbar, simply call `attachTo()`\nand pass it a DOM element.\n\n```javascript\nmdc.toolbar.MDCToolbar.attachTo(document.querySelector('.mdc-toolbar'));\n```\n\n### Manual Instantiation\n\n```javascript\nimport {MDCToolbar} from '@material/toolbar';\n\nconst toolbar = new MDCToolbar(document.querySelector('.mdc-toolbar'));\n```\n\n### Using the MDCToolbar Foundation Class\n\n#### API\n\nMethod Signature | Description\n--- | ---\n`updateAdjustElementStyles() => void` | sets `AdjustElement` proper `margin-top`.\n\n#### Event\n\nEvent Name | Event Data Structure | Description\n--- | --- | ---\n`change` | `{flexibleExpansionRatio: number}` | Emits the ratio of current flexible space to total flexible space height. So when it is minimized, ratio equals to 0 and when it is maximized, ratio equals to 1.\n\n#### Adapter\n\nMethod Signature | Description\n--- | ---\n`hasClass(className: string) => boolean` | Checks if the root element of the component has the given className.\n`addClass(className: string) => void` | Adds a class to the root element of the component.\n`removeClass(className: string) => void` | Removes a class from the root element of the component.\n`registerScrollHandler(handler: Function) => void` | Registers a handler to be called when user scrolls. Our default implementation adds the handler as a listener to the window's `scroll` event.\n`deregisterScrollHandler(handler: Function) => void` | Unregisters a handler to be called when user scrolls. Our default implementation removes the handler as a listener to the window's `scroll` event.\n`registerResizeHandler(handler: Function) => void` | Registers a handler to be called when the surface (or its viewport) resizes. Our default implementation adds the handler as a listener to the window's `resize` event.\n`deregisterResizeHandler(handler: Function) => void` | Unregisters a handler to be called when the surface (or its viewport) resizes. Our default implementation removes the handler as a listener to the window's `resize` event.\n`getViewportWidth() => number` | Gets viewport (window) width.\n`getViewportScrollY() => number` | Gets the number of pixels that the content of body is scrolled upward\n`getOffsetHeight() => number` | Gets root element `mdc-toolbar` offsetHeight.\n`getFirstRowElementOffsetHeight() => number` | Gets first row element offsetHeight.\n`notifyChange(evtData: {flexibleExpansionRatio: number}) => void` | Broadcasts an event with the remaining ratio of flexible space.\n`setStyle(property: string, value: number) => void` | Sets `mdc-toolbar` style property to provided value.\n`setStyleForTitleElement(property: string, value: number) => void` | Sets `mdc-toolbar__title` style property to provided value.\n`setStyleForFlexibleRowElement(property: string, value: number) => void` | Sets flexible row element style property to provided value.\n`setStyleForFixedAdjustElement(property: string, value: number) => void` | Sets `mdc-toolbar-fixed-adjust` style property to provided value.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/material-components/material-components-web.git"
  },
  "version": "0.35.0"
}
