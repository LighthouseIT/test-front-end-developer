{
  "_args": [
    [
      {
        "raw": "@material/image-list@^0.35.0",
        "scope": "@material",
        "escapedName": "@material%2fimage-list",
        "name": "@material/image-list",
        "rawSpec": "^0.35.0",
        "spec": ">=0.35.0 <0.36.0",
        "type": "range"
      },
      "D:\\Dropbox\\Dashboard - Filipe\\node_modules\\material-components-web"
    ]
  ],
  "_from": "@material/image-list@>=0.35.0 <0.36.0",
  "_id": "@material/image-list@0.35.0",
  "_inCache": true,
  "_location": "/@material/image-list",
  "_nodeVersion": "8.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/image-list_0.35.0_1524523223393_0.31958982040597084"
  },
  "_npmUser": {
    "name": "bonniez",
    "email": "bonniez@google.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@material/image-list@^0.35.0",
    "scope": "@material",
    "escapedName": "@material%2fimage-list",
    "name": "@material/image-list",
    "rawSpec": "^0.35.0",
    "spec": ">=0.35.0 <0.36.0",
    "type": "range"
  },
  "_requiredBy": [
    "/material-components-web"
  ],
  "_resolved": "https://registry.npmjs.org/@material/image-list/-/image-list-0.35.0.tgz",
  "_shasum": "1e0a3db2ae90da2c6f629018c3535f81fcbed72d",
  "_shrinkwrap": null,
  "_spec": "@material/image-list@^0.35.0",
  "_where": "D:\\Dropbox\\Dashboard - Filipe\\node_modules\\material-components-web",
  "bugs": {
    "url": "https://github.com/material-components/material-components-web/issues"
  },
  "dependencies": {
    "@material/theme": "^0.35.0",
    "@material/typography": "^0.35.0"
  },
  "description": "The Material Components for the web image list component",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-n6nCl+icngiAAbOwIInNAFsJ+dgjmts+npG9tNLBvs9twBrJWavtIpkbwnQNtNlc5gBQuBRraCHIUqZ7pDY5zw==",
    "shasum": "1e0a3db2ae90da2c6f629018c3535f81fcbed72d",
    "tarball": "https://registry.npmjs.org/@material/image-list/-/image-list-0.35.0.tgz",
    "fileCount": 7,
    "unpackedSize": 16363,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa3mDYCRA9TVsSAnZWagAAMZ0P/0bWcwZvLqrJEv5kQNDe\ne/gFdhbqgZBv9DCXFjptF8E7Nzw+LNFnBG5/bv9zsOYgWk/kLpZlVE249AFb\ntyJpuqbSwoESu+uG32KK0J6IXl1khjWHLD9JLsk7F1RZtH4nRpY4MzxV6y48\n2GX/TkHG6DxKrebrEYMwlRDrloSGLYvrw2RzI6dzEEDrV7cIf1pyk8TsXjFf\nYmeFFWgLlx80OWxVyfHc7+GpRpI0XXUCNmwEGu+H22wp90bs9ZGNtGjtnuOB\n7G+GOYTmjAhtX2c6MZmgRIeRZdF7xvRzV0DnpeoS5a7GeJcgubndem3FTYzB\nqN+y9BVqxcSbMjFiIHGk7NbBToxzjnfOrVvPmAifJvyuFu6rPLEPzNOQdBqD\n4FuGUVf4/H1Z9mZRA988MnX3IA8X8liFfEyep/EHUEzeZW2ylcTMqEoRftIR\nh7VMYumiE3hz3B1vzbkHaKEbdxxUmYYXxLwaHX9z3rah4hEuZiGC6Me4GPVH\n6Z3gQr9HBpwOXN2Vrx48543mC5BXlK56QPv5Ba5nlPpN92BDl9rtblr3WdnW\nXyjbEJaZ2jnNlphbrrCishhurF1Wb8P4t5huze8viMW8VbQNrW5OxWB44t8z\ntVnFXRIFJhEQaKZR/mGs+lxuznDjBwoI5xjPRHGijNQdQfFHYWAHAukw1Sf9\nbKjT\r\n=S69s\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/material-components/material-components-web#readme",
  "keywords": [
    "material components",
    "material design",
    "image list"
  ],
  "license": "Apache-2.0",
  "maintainers": [
    {
      "name": "abhiomkar",
      "email": "abhiomkar@gmail.com"
    },
    {
      "name": "acdvorak",
      "email": "acdvorak@gmail.com"
    },
    {
      "name": "aprigogin",
      "email": "andrey.prigogin@gmail.com"
    },
    {
      "name": "azakus",
      "email": "dfreedm2@gmail.com"
    },
    {
      "name": "bonniez",
      "email": "bonniez@google.com"
    },
    {
      "name": "bwobrien",
      "email": "obrien.test@gmail.com"
    },
    {
      "name": "kfranqueiro",
      "email": "kenneth.franqueiro@gmail.com"
    },
    {
      "name": "lynnjepsen",
      "email": "lynnjepsen@google.com"
    },
    {
      "name": "material-admin",
      "email": "lynnjepsen+npm@google.com"
    },
    {
      "name": "moog16",
      "email": "mattgoo@gmail.com"
    },
    {
      "name": "patrickrodee",
      "email": "prodee@google.com"
    },
    {
      "name": "williamernest",
      "email": "williamernest@google.com"
    }
  ],
  "name": "@material/image-list",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "<!--docs:\ntitle: \"Image List\"\nlayout: detail\nsection: components\nexcerpt: \"An RTL-aware Material Design image list component.\"\niconId: card\npath: /catalog/image-lists/\n-->\n\n# Image List\n\n<!--<div class=\"article__asset\">\n  <a class=\"article__asset-link\"\n     href=\"https://material-components-web.appspot.com/image-list.html\">\n    <img src=\"{{ site.rootpath }}/images/mdc_web_screenshots/image-list.png\" width=\"294\" alt=\"Image list screenshot\">\n  </a>\n</div>-->\n\nMDC Image List provides a RTL-aware Material Design image list component, representing an evolution of the\n[Material Design Grid List spec](https://material.io/guidelines/components/grid-lists.html).\nAn Image List consists of several items, each containing an image and optionally supporting content (i.e. a text label).\n\n## Design & API Documentation\n\n<ul class=\"icon-list\">\n  <li class=\"icon-list-item icon-list-item--spec\">\n    <a href=\"https://material.io/guidelines/components/grid-lists.html\">Material Design guidelines: Grid lists</a>\n  </li>\n  <li class=\"icon-list-item icon-list-item--link\">\n    <a href=\"https://material-components-web.appspot.com/image-list.html\">Demo</a>\n  </li>\n</ul>\n\n## Installation\n\n```\nnpm install @material/image-list\n```\n\n## Basic Usage\n\n### HTML Structure\n\nThe HTML structure for a Standard Image List is as follows:\n\n```html\n<ul class=\"mdc-image-list my-image-list\">\n  <li class=\"mdc-image-list__item\">\n    <div class=\"mdc-image-list__image-aspect-container\">\n      <img class=\"mdc-image-list__image\" src=\"...\">\n    </div>\n    <div class=\"mdc-image-list__supporting\">\n      <span class=\"mdc-image-list__label\">Text label</span>\n    </div>\n  </li>\n  ...\n</ul>\n```\n\n### Styles\n\nThe structure above would be combined with an invocation of the `mdc-image-list-standard-columns` mixin, to establish how many\ncolumns should be displayed per line:\n\n```scss\n.my-image-list {\n  @include mdc-image-list-standard-columns(5);\n}\n```\n\nImages in a Standard Image list are constrained to 1:1 aspect ratio by default; this can be overridden using the\n`mdc-image-list-aspect` mixin documented below.\n\n## Variants\n\n### Masonry Image List\n\nThe Masonry Image List variant presents images vertically arranged into several columns, using\n[CSS Columns](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns). In this layout, images may be any\ncombination of aspect ratios.\n\n```html\n<ul class=\"mdc-image-list mdc-image-list--masonry my-masonry-image-list\">\n  <li class=\"mdc-image-list__item\">\n    <img class=\"mdc-image-list__image\" src=\"...\">\n    <div class=\"mdc-image-list__supporting\">\n      <span class=\"mdc-image-list__label\">Text label</span>\n    </div>\n  </li>\n  ...\n</ul>\n```\n\n> **Note:** Masonry Image List items _do not_ include the `mdc-image-list__image-aspect-container` element, since\nimages in the list are not expected to be locked to a common aspect ratio.\n\nThis would be combined with an invocation of the `mdc-image-list-masonry-columns` mixin, to establish how many columns\nshould be displayed:\n\n```scss\n.my-masonry-image-list {\n  @include mdc-image-list-masonry-columns(5);\n}\n```\n\n## Style Customization\n\n### CSS Classes\n\nCSS Class | Description\n--- | ---\n`mdc-image-list` | Mandatory. Indicates the root Image List element.\n`mdc-image-list--masonry` | Optional. Indicates that this Image List should use the Masonry variant.\n`mdc-image-list--with-text-protection` | Optional. Indicates that supporting content should be positioned in a scrim overlaying each image (instead of positioned separately under each image).\n`mdc-image-list__item` | Mandatory. Indicates each item in an Image List.\n`mdc-image-list__image-aspect-container` | Optional. Parent of each item's image element, responsible for constraining aspect ratio. This element may be omitted entirely if images are already sized to the correct aspect ratio.\n`mdc-image-list__image` | Mandatory. Indicates the image element in each item.\n`mdc-image-list__supporting` | Optional. Indicates the area within each item containing the supporting text label, if the Image List contains text labels.\n`mdc-image-list__label` | Optional. Indicates the text label in each item, if the Image List contains text labels.\n\n### Sass Mixins\n\nMixin | Description\n--- | ---\n`mdc-image-list-aspect($width-height-ratio)` | Styles the aspect container elements within an Image List to conform to the given ratio, where 1 is 1:1, greater than 1 is wider, and less than 1 is taller.\n`mdc-image-list-corner-radius($radius)` | Styles the image and supporting content elements within an Image List to have rounded corners with the given radius.\n`mdc-image-list-standard-columns($column-count, $gutter-size)` | Styles a Standard Image List to display the given number of columns. `$gutter-size` is optional and overrides the default amount of space between items.\n`mdc-image-list-masonry-columns($column-count, $gutter-size)` | Styles a Masonry Image List to display the given number of columns. `$gutter-size` is optional and overrides the default amount of space between items.\n\n> **Note:** Only one of the `mdc-image-list-...-columns` mixins should be used for any given Image List.\n> Use the mixin appropriate to the variant being used.\n\n### Additional Information\n\n#### Constraining width\n\nThe `mdc-image-list-...-columns` mixins will grow and shrink items based on the Image List's overall width. Depending on\nplacement, this could be directly related to the viewport width, and images could become exceedingly large compared to\ntheir actual rendered size. This can be restricted by using any of `min-width`, `width`, or `max-width` on the Image\nList:\n\n```scss\n.my-image-list {\n  @include mdc-image-list-standard-columns(5);\n  max-width: 960px;\n}\n```\n\n> **Note:** Remember that any specified width will apply to the _entire_ list, so be sure to account for the gutters\nas well.\n\n#### Changing number of columns across breakpoints\n\nPresenting a different number of columns for different viewport sizes is straightforward, since the only thing that\nneeds to be changed are styles:\n\n```scss\n.my-image-list {\n  @include mdc-image-list-standard-columns(5);\n}\n\n@media (max-width: 599px) {\n  .my-image-list {\n    @include mdc-image-list-standard-columns(3);\n  }\n}\n```\n\n#### Using div in place of img to enforce aspect ratio\n\n> **Note:** This advice is not applicable to Masonry Image List, where images do not share a common aspect ratio.\n\nImages in an Image List typically use the `img` element. However, if your assets don't have the same aspect ratio as\nspecified for list items, they will become distorted. In these cases, you can use a `div` element in place of `img`,\nand set the `background-image` of each.\n\n> **Note:** Ensuring your images are appropriately-sized prior to serving them to browsers is the most efficient and\nideal approach to using MDC Image List. The `div` alternative is provided as a convenience. If you use this alternative,\nmake sure to also include the `mdc-image-list__image-aspect-container` element around each item's image.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/material-components/material-components-web.git"
  },
  "version": "0.35.0"
}
